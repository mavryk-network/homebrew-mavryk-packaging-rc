# SPDX-FileCopyrightText: 2022 Oxhead Alpha
# SPDX-License-Identifier: LicenseRef-MIT-OA

env:
  USE_NEWER_NIX: 1
  DOCKER_BUILDKIT: 1
  SET_VERSION: "export OCTEZ_VERSION=\"$(cat meta.json | jq -r '.tezos_ref' | cut -d'/' -f3)\""


steps:
 - label: Check for new Octez release
   if: build.source == "schedule" && build.branch == "master"
   commands:
   - nix develop .#autorelease -c ./scripts/update-tezos.sh

 - label: Build ubuntu source packages
   key: build-ubuntu-source-packages
   if: build.tag =~ /^v.*/
   commands:
   - eval "$SET_VERSION"
   - |
     if [[ "$BUILDKITE_TAG" =~ ^v.*-1 ]]; then
        nix develop .#docker-tezos-packages -c ./docker/build/ubuntu/build.py --type source --build-sapling-package -p tezos-baker-PtParisB tezos-baker-PsParisC tezos-accuser-PsParisC tezos-accuser-PtParisB tezos-codec tezos-signer tezos-dac-client tezos-client tezos-dac-node tezos-smart-rollup-wasm-debugger tezos-admin-client tezos-dal-node tezos-smart-rollup-node tezos-node tezos-sapling-params
     else
        nix develop .#docker-tezos-packages -c ./docker/build/ubuntu/build.py --type source --launchpad-sources
     fi
   artifact_paths:
     - ./out/*

 - label: Sign ubuntu source packages
   if: build.tag =~ /^v.*/
   depends_on:
   - "build-ubuntu-source-packages"
   key: sign-ubuntu-source-packages
   commands:
   - eval "$SET_VERSION"
   - buildkite-agent artifact download "out/*" . --step build-ubuntu-source-packages
   - nix develop .#docker-tezos-packages -c ./docker/build/ubuntu/sign.py -d out -i 'Serokell <tezos-packaging@serokell.io>'
   artifact_paths:
     - ./out/*

 - label: Publish ubuntu native packages
   if: build.tag =~ /^v.*/
   depends_on:
   - "sign-ubuntu-source-packages"
   commands:
   - eval "$SET_VERSION"
   - buildkite-agent artifact download "out/*" . --step sign-ubuntu-source-packages
   - nix develop .#buildkite -c ./docker/build/ubuntu/upload.py -d out
